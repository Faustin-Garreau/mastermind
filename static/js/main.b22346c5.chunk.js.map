{"version":3,"sources":["Navbar.js","Line.js","Plateau.js","Control.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","props","href","target","className","Line","line","Plateau","lines","game","map","element","index","key","Control","onClick","colorize","undo","submit","App","state","currentCase","currentLine","msg","iswinorloose","combinationToFind","aleatoire","change","bind","compare","i","entier","Math","floor","random","push","console","log","color","gameBis","this","setState","pop","result","combination","good","bad","length","includes","indexOf","id","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b22346c5.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Navbar(props) {\n    return (\n        <header>\n                <a href=\"https://fr.wikipedia.org/wiki/Mastermind\" target=\"_blank\" className=\"logo\">Mastermind</a>\n            <nav>\n                <ul>\n                <li><a href=\"https://fr.wikipedia.org/wiki/Mastermind\">RÃ¨gles</a></li>\n                <li><a href=\"#\">JeSaisAP</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default Navbar","import React from 'react'\n\nfunction Line(props) {\n    return (\n        <div className=\"line\">\n            <div className=\"combinaison\">\n                <div className={\"case-combinaison \" + (props.line[0][0] ? props.line[0][0] : \"\" )}></div>\n                <div className={\"case-combinaison \" + (props.line[0][1] ? props.line[0][1] : \"\" )}></div>\n                <div className={\"case-combinaison \" + (props.line[0][2] ? props.line[0][2] : \"\" )}></div>\n                <div className={\"case-combinaison \" + (props.line[0][3] ? props.line[0][3] : \"\" )}></div>\n            </div>\n\n            <div className=\"result\">\n            <div className={\"case-result \" + (props.line[1][0] ? props.line[1][0] : \"\" )}></div>\n            <div className={\"case-result \" + (props.line[1][1] ? props.line[1][1] : \"\" )}></div>\n            <div className={\"case-result \" + (props.line[1][2] ? props.line[1][2] : \"\" )}></div>\n            <div className={\"case-result \" + (props.line[1][3] ? props.line[1][3] : \"\" )}></div>\n            </div>\n        </div>\n    )\n}\n\nexport default Line","import React from 'react'\nimport Line from './Line'\n\nfunction Plateau(props) {\n\n    const lines = props.game.map((element , index) => (\n        <Line key={index} line={element}></Line>\n    )) \n    return (\n        <div className=\"plateau\">\n            {lines}\n        </div>\n    )\n}\n\nexport default Plateau","import React from 'react'\n\nfunction Control(props) {\n    return (\n        <div className=\"control\">\n            <div className=\"combinaison\">\n                <div className=\"color red\" onClick={() => props.colorize('red')}></div>\n                <div className=\"color orange\" onClick={() => props.colorize('orange')}></div>\n                <div className=\"color yellow\" onClick={() => props.colorize('yellow')}></div>\n                <div className=\"color green\" onClick={() => props.colorize('green')}></div>\n                <div className=\"color blue\" onClick={() => props.colorize('blue')}></div>\n                <div className=\"color purple\" onClick={() => props.colorize('purple')}></div>\n            </div>\n\n            <div className=\"actions\">\n                <button onClick={props.undo}>Undo</button>\n                <button onClick={props.submit}>Submit</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Control","import React from 'react';\nimport './App.css';\nimport Navbar from './Navbar';\nimport Plateau from './Plateau';\nimport Control from './Control';\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      currentCase: 0,\n      currentLine: 0,\n      msg: \"\",\n      iswinorloose: \"hidden\",\n      combinationToFind: this.aleatoire(),\n      game: [\n        [[],[]],\n        [[],[]],\n        [[],[]],\n        [[],[]],\n        [[],[]],\n        [[],[]],\n        [[],[]],\n        [[],[]],\n        [[],[]],\n        [[],[]],\n      ],\n    };\n    this.change = this.change.bind(this);\n    this.undo = this.undo.bind(this);\n    this.compare = this.compare.bind(this);\n    this.submit = this.submit.bind(this);\n  }\n\n  aleatoire() {\n    const combinationToFind = []\n\n    for (var i = 0; i < 4;i++) {\n      let entier = Math.floor(Math.random() * 6);\n      if (entier === 0) {\n        combinationToFind.push(\"red\")\n      } else if (entier === 1) {\n        combinationToFind.push(\"orange\")\n      } else if (entier === 2) {\n        combinationToFind.push(\"yellow\")\n      } else if (entier === 3) {\n        combinationToFind.push(\"green\")\n      } else if (entier === 4) {\n        combinationToFind.push(\"blue\")\n      } else if (entier === 5) {\n        combinationToFind.push(\"purple\")\n      } else {\n        console.log('error aleatoire')\n      }\n    }\n    return combinationToFind\n  }\n\n  change(color) {\n    const gameBis = [...this.state.game]\n    if (this.state.currentLine === 10) {\n      this.setState((state) => ({\n        msg: \"YOU LOOSE\",\n        iswinorloose: \"visible\",\n      }));\n    }\n    else if (this.state.currentCase < 4) { \n      gameBis[this.state.currentLine][0].push(color)\n\n      this.setState((state) => ({\n        game: gameBis,\n        currentCase: state.currentCase + 1,\n      }));\n    } \n    \n  }\n\n   undo(color) {\n    const gameBis = [...this.state.game]\n\n    if (this.state.currentCase > 0) {\n      gameBis[this.state.currentLine][0].pop(color)\n\n      this.setState((state) => ({\n        game: gameBis,\n        currentCase: state.currentCase - 1,\n      }));\n    }\n  \n  }\n\n  submit() {\n    let gameBis = [...this.state.game]\n    if (this.state.currentCase === 4) {\n      let result = this.compare();\n      \n      for (let index = 0;index < result[0]; index++) {\n        gameBis[this.state.currentLine][1].push('black')\n      }\n      for (let index = 0;index < result[1]; index++) {\n        gameBis[this.state.currentLine][1].push('grey')\n      }\n      if (result[0] === 4) {\n        \n        this.setState((state) => ({\n          msg: \"YOU WIN\",\n          iswinorloose: \"visible\",\n        }));\n      }\n\n    this.setState((state) => ({\n      game: gameBis,\n      currentLine: state.currentLine + 1,\n      currentCase: state.currentCase = 0\n    }));\n    } \n\n  }  \n\n  compare() {\n    let combination = [...this.state.game[this.state.currentLine][0]]\n    let combinationToFind = [...this.state.combinationToFind]\n    let good = 0\n    let bad = 0\n\n    for(let index = 0; index < combination.length; index++) {\n      if (combination[index] === combinationToFind[index]) {\n        good++\n        combinationToFind[index] = \"X\"\n        combination[index] = \"A\"\n      } \n\n    }\n\n    for (let index = 0; index < combinationToFind.length;index++) {\n      if (combinationToFind.includes(combination[index])) {\n        bad++\n        combinationToFind[combinationToFind.indexOf(combination[index])] = \"X\"\n        combination[index] = \"A\"\n      }\n    }\n\n    return [good , bad]\n  }\n\n\n  render() {\n  return (\n    <div className=\"App\">\n      <Navbar></Navbar>\n      <div className=\"result-box\">\n      <div className={this.state.iswinorloose} id=\"winorloose\">{this.state.msg}</div>\n      </div>\n      <main>\n        <Plateau className=\"plateau\" game={this.state.game}></Plateau>\n        <Control className=\"control\" undo={this.undo} colorize={this.change} submit={this.submit}></Control>\n      </main> \n    </div>\n  );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}